/* Navigation bar
==========
*/

.nav-bar {
	@extend .clearfix;

	background: map-get($nav-bar, bg-color);
	width: 100%;
	max-height: 100%;
	z-index: 999;
	transition: all map-get($base, transition-speed);
	text-align: center;
	transform: translate3d(0, 0, 0);
	height: rem(50px);
	min-width: rem(map-get($container, min-width));

	.csspositionsticky & {
		position: sticky;
		top: 0;
		left: 0;
	}

	.no-csspositionsticky & {
		position: relative;
	}

	@include mq(map-get($nav-bar, mq)) {
		max-height: inherit;
		text-align: left;
		height: auto;
	}

	.logo {
		position: relative;
		z-index: 2;
		display: inline-block;
		margin-bottom: -6px;
		padding-top: rem(12px);
		min-height: rem(map-get($nav-bar, trigger-height));

		@include mq(map-get($nav-bar, mq)) {
			float: left;
			padding-top: 0;
			min-height: inherit;
			margin-top: rem(18px);
			margin-bottom: 0;
		}
	}

	&--transform {
		transform: translate3d(0, -100%, 0);

		&.nav-bar--show {
			transform: translate3d(0, 0, 0);
		}

		&.nav-bar--always-show-on-mobile {
			@include mq(alpha) {
				transform: translate3d(0, 0, 0);
			}
		}
	}

	&--transparent {
		&:not(.nav-bar--fixed) {
			@include mq(map-get($nav-bar, mq)) {
				background: transparent;

				.nav-bar__link {
					color: black;

					&.nav-bar__link--active,
					&.scrollspy-nav--active,
					&:hover {
						background: transparent;
						color: map-get($color, beta);
					}
				}

				.nav-bar--transparent & {
					color: map-get($nav-bar, link-color);
				}
			}
		}
	}

	&--fixed {
		.no-csspositionsticky & {
			position: fixed;
			top: 0;
			left: 0;
		}
	}

	&__container {
		@extend .clearfix;

		margin-left: map-get($container, margin-left);
		margin-right: map-get($container, margin-right);
		max-width: rem(map-get($container, max-width));
		min-width: rem(map-get($container, min-width));

		@include mq(map-get($nav-bar, mq)) {
			padding-left: rem(map-get($container, padding)*4px);
			padding-right: rem(map-get($container, padding)*4px);
		}

		&::before {
			content: '';
			background: map-get($nav-bar, bg-color);
			position: absolute;
			top: 0;
			left: 0;
			z-index: 1;
			width: 100%;
			height: 100%;

			@include mq(map-get($nav-bar, mq)) {
				display: none;
			}
		}
	}

	&__nav {
		@extend .clearfix;

		height: 0;

		@include mq(map-get($nav-bar, mq)) {
			@if map-get($nav-bar, nav-position) == left {
				float: left;
			} @else {
				float: right;
			}

			height: auto;
			margin-left: rem(map-get($nav-bar, nav-margin-left));
		}

		.nav-bar--mobile-show & {
			height: auto;
		}
	}

	&__trigger {
		@extend %font-icons;

		display: inline-block;
		background: map-get($nav-bar, bg-color);
		float: right;
		text-align: center;
		line-height: map-get($nav-bar, trigger-height);
		position: absolute;
		top: 0;
		right: 0;
		z-index: 2;
		width: rem(map-get($nav-bar, trigger-height));
		height: rem(map-get($nav-bar, trigger-height));

		@include mq(map-get($nav-bar, mq)) {
			display: none;
		}

		&:active,
		&:hover {
			background: lighten(map-get($nav-bar, trigger-bg-color), 10%);
		}

		&::before {
			content: map-get($icon, nav-bar-trigger);
			color: white;
			font-size: rem(map-get($nav-bar, trigger-font-size));

			.nav-bar--mobile-show & {
				content: map-get($icon, nav-bar-trigger-close);
			}
		}
	}

	&__list {
		@extend .list-inline;

		background: map-get($nav-bar, bg-color);
		position: relative;
		z-index: 0;
		clear: both;
		overflow-y: auto;
		transition: all map-get($base, transition-speed);
		transform: translate3d(0, -100%, 0);

		@include mq(map-get($nav-bar, mq)) {
			background: transparent;
			transform: translate3d(0, 0, 0);
			float: right;
			border-top: 0;
			overflow-y: inherit;
		}

		.nav-bar--mobile-show & {
			transform: translate3d(0, 0, 0);
		}

		li {
			display: block;
			margin: 0;

			@include mq(map-get($nav-bar, mq)) {
				display: inline-block;
				margin-right: -4px;
			}
		}
	}

	&__link {
		display: block;
		color: map-get($nav-bar, link-color);
		text-align: map-get($nav-bar, link-text-align);
		padding: rem(map-get($nav-bar, link-padding-vertical)) rem(map-get($nav-bar, link-padding-horizontal));

		@include mq(map-get($nav-bar, mq)) {
			display: inline-block;
		}

		.touch & {
			transition: none;
		}

		&:hover {
			background: lighten(map-get($nav-bar, bg-color), 10%);
			color: map-get($nav-bar, link-color);
		}

		&.nav-bar__link--active,
		&.scrollspy-nav--active {
			background: map-get($color, beta);
			color: map-get($nav-bar, link-color);
		}

	}
}


/*doc
---
title: Nav bar
name: nav_bar
category: Navigation
---

```html_example
<header id="nav-bar" class="nav-bar">
	<div class="nav-bar__container">
		<a class="logo" href="/"><img src="assets/dist/img/logo.png" alt=""></a>
		<nav class="nav-bar__nav">
			<a id="nav-bar-trigger" class="nav-bar__trigger hide-gamma-and-up"></a>
			<ul class="nav-bar__list">
				<li class="nav-bar__item"><a class="nav-bar__link" href="#">link</a></li>
				<li class="nav-bar__item"><a class="nav-bar__link" href="#">link</a></li>
				<li class="nav-bar__item"><a class="nav-bar__link" href="#">link</a></li>
			</ul>
		</nav>
	</div>
</header>
```

*/