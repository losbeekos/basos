/*doc
---
title: Styles
name: styles
category: Buttons
---

Add more colors in the settings file under "buttons" if you need to.

```html_example
<a class="btn btn--alpha btn--small" href="#">alpha</a>
<a class="btn btn--beta btn--small" href="#">beta</a>
<a class="btn btn--gamma btn--small" href="#">gamma</a>
<a class="btn btn--delta btn--small" href="#">delta</a>
<a class="btn btn--epsilon btn--small" href="#">epsilon</a>
```

*/

@mixin btn-style($bg-color) {
    background-color: $bg-color;
    border-color: darken($bg-color, map-get($btn, border-color-darken));

    &:hover {
        background-color: darken($bg-color, 2%);
    }

    &:active,
    &:focus {
        background-color: darken($bg-color, 4%);
    }

    &--divider:hover,
    &:disabled,
    &:disabled:hover {
        background-color: $bg-color;
    }

    &.btn--ghost {
        color: $bg-color;
        border-color: $bg-color;

        &:hover {
            background: $bg-color;
            color: white;
            border-color: $bg-color;
        }

        &.btn--alpha,
        &.btn--light {
            &:hover {
                color: map-get($color, text);
            }
        }
    }

    .btn-group--inline & {
        border-left: 1px solid lighten($bg-color, 3%);
    }

    .btn-group--block & {
        border-top: 1px solid lighten($bg-color, 3%);
    }
}

.btn {
    overflow: hidden; // Needed for the ripple effect
    vertical-align: middle;
    background-image: none;
    position: relative;
    display: inline-block;
    color: map-get($color, text);
    border-radius: map-get($btn, border-radius);
    border: 0;
    outline: 0;
    text-align: center;
    border-width: map-get($btn, border-width);
    border-style: solid;
    transition: all map-get($base, transition-speed);
    -webkit-appearance: none;
    -moz-appearance: none;
    user-select: none;
    line-height: rem(map-get($btn, line-height));

    @include btn-style(map-get($btn-bg, alpha));

    @if map-get($btn, gradient) {
        background-image: map-get($btn, gradient-bg);
    }

    &.tooltip {
        overflow: visible;
    }

    &:hover {
        color: map-get($color, text);
    }

    &:focus {
        outline: none;
    }

    &:disabled,
    &:disabled:hover {
        cursor: not-allowed;
        color: darken(white, 20%);
        opacity: 0.5;

        &:focus {
            box-shadow: none;
        }
    }

    &--beta,
    &--gamma,
    &--delta,
    &--epsilon {
        color: white;
        text-shadow: map-get($btn, text-shadow);

        &:hover {
            color: white;
        }

        &:disabled,
        &:disabled:hover {
            color: darken(white, 20%);
        }
    }

/*doc
---
title: Mask
name: mask
category: Buttons
---

```html_example
<a class="btn btn--mask btn--medium" href="#">button medium</a>
```

*/

    &--mask {
        @include btn-style(transparent);

        &:hover {
            background-color: darken(white, 5%);
        }

        &:active,
        &:focus {
            background-color: darken(white, 10%);
        }
    }

/*doc
---
title: Block
name: block
category: Buttons
---

```html_example
<div class="grid">
    <div class="column-6">
        <a class="btn btn--block btn--beta btn--large" href="#">block button</a>
    </div>
    <div class="column-6">
        <a class="btn btn--block btn--beta btn--large" href="#">block button</a>
    </div>
</div>
```

*/

    &--block {
        min-width: 100%;
        display: block;
    }

    &--divider {
        cursor: default;
    }

    @each $key, $value in $btn-bg {
        &--#{$key} {
            @include btn-style(map-get($btn-bg, $key));
        }
    }

/*doc
---
title: Ghost
name: ghost
category: Buttons
---

Add more colors in the settings file under "buttons" if you need to.

```html_example
<a class="btn btn--ghost btn--dark btn--small" href="#">black</a>
```

*/

    &--ghost {
        background: transparent;
        border-width: map-get($btn, ghost-border-width);
        border-radius: map-get($btn, ghost-border-radius);
        color: map-get($color, text);
        text-shadow: none;
        opacity: map-get($btn, ghost-opacity);

        &:hover {
            opacity: map-get($btn, ghost-opacity-hover);
        }

        &:hover,
        &:active,
        &:focus {
            background: transparent;
            color: map-get($color, text);
        }
    }

    &--ripple {
        overflow: hidden;
        position: relative;

        &.tooltip {
            overflow: visible;
        }
    }

    &__ripple {
        display: block; 
        position: absolute;
        background: rgba(255, 255, 255, 0.25);
        border-radius: 100%;
        transform: scale(0);

        .btn--light &,
        .btn--alpha & {
            background: rgba(0, 0, 0, 0.2);
        }

        .btn--ripple-animate & {
            animation: btn-ripple 0.4s linear;
        }

        .tooltip & {
            display: none;
        }
    }
}

@keyframes btn-ripple {
    100% {
        opacity: 0; 
        transform: scale(2.5);
    }
}

/*doc
---
title: No button style
name: no_btn_style
category: Buttons
---

Commonly used for triggers. For example a navigation trigger

```html_example
<button class="no-btn-style">Button</button>
```

*/

.no-btn-style {
    background: none;
    box-shadow: none;
    border: 0;
    padding: 0;
    text-shadow: none;

    &:active,
    &:focus {
        outline: none;
    }
}

/*doc
---
title: Split
name: split_button
category: Buttons
---

```html_example
<div class="btn-dropdown">
    <button data-datatables-btn="action" type="button" class="btn-dropdown__action btn btn--medium btn--alpha btn--bordered icon icon--cog icon--margin-alpha">Activate</button>
    <button data-datatables-btn="action" type="button" class="btn-dropdown__toggle btn btn--medium btn--alpha btn--bordered" data-btn-dropdown-toggle aria-haspopup="true" aria-expanded="false"></button>
    <div class="btn-dropdown__dropdown" data-btn-dropdown="allowPropagation">
        <ul class="btn-dropdown__list btn-dropdown__list--border-bottom" data-btn-dropdown="allowPropagation">
            <li><a class="btn-dropdown__link" href="#">Deactivate</a></li>
            <li><a class="btn-dropdown__link" href="#">Concept</a></li>
        </ul>
        <a class="btn btn--mask btn--medium btn--block" href="#">Delete</a>
    </div>
</div>
```

*/

/*doc
---
title: Dropdown
name: dropdown_button
category: Buttons
---

```html_example
<div class="btn-dropdown btn-dropdown--action">
    <button type="button" class="btn-dropdown__action btn btn--medium btn--alpha btn--bordered icon icon--filter icon--margin-beta-before" data-btn-dropdown-toggle>Filter</button>
    <div class="btn-dropdown__dropdown">
        <ul class="btn-dropdown__list btn-dropdown__list--border-bottom btn-dropdown__list--padding">
            <li class="btn-dropdown__item"><input name="checkbox-active" type="checkbox" id="checkbox-active"><label for="checkbox-active">Active</label></li>
            <li class="btn-dropdown__item"><input name="checkbox-inactive" type="checkbox" id="checkbox-inactive"><label for="checkbox-inactive">Inactive</label></li>
            <li class="btn-dropdown__item"><input name="checkbox-concept" type="checkbox" id="checkbox-concept"><label for="checkbox-concept">Concept</label></li>
            <li class="btn-dropdown__item"><input name="checkbox-published" type="checkbox" id="checkbox-published"><label for="checkbox-published">Published</label></li>
            <li class="btn-dropdown__item"><input name="checkbox-notpublished" type="checkbox" id="checkbox-notpublished"><label for="checkbox-notpublished">Unpublished</label></li>
        </ul>
        <a class="btn btn--mask btn--medium btn--block" data-status-clear-checkboxes>Remove filters</a>
    </div>
</div>
```

*/

.btn-dropdown {
    position: relative;
    display: inline-block;

    &__action {
        float: left;
        border-top-left-radius: rem(4px);
        border-bottom-left-radius: rem(4px);

        .btn-dropdown--action & {
            float: none;
            border-radius: rem(4px);
        }

        &:before {
            color: map-get($color, kappa);
        }

        &:after {
            @extend %font-icons;

            color: map-get($color, kappa);

            .btn-dropdown--action & {
                content: '\e80a';
                margin-left: rem(10px);

                // transition: transform map-get($dropdown, transition-duration); // Creates a renderbug in chrome when rotating...
            }

            .btn-dropdown--action.btn-dropdown--open & {
                transform: rotate(180deg);
            }

            .btn-dropdown--no-arrow & {
                display: none;
            }
        }
    }

    &__toggle {
        @extend .icon;
        @extend .icon--down;

        margin-left: -1px;
        border-top-left-radius: rem(4px);
        border-bottom-left-radius: rem(4px);

        &:before {
            // transition: transform map-get($dropdown, transition-duration); // Creates a renderbug in chrome when rotating...

            .btn-dropdown--open & {
                transform: rotate(180deg);
            }
        }
    }

    &__dropdown {
        @extend .list-unstyled;

        overflow: hidden;
        position: absolute;
        left: 0;
        margin-top: 1px;
        visibility: hidden;
        background-color: white;
        border: map-get($dropdown, border);
        opacity: 0;
        z-index: 9999;
        transition: all map-get($dropdown, transition-duration);
        transform: map-get($dropdown, transform);
        min-width: rem(map-get($dropdown, min-width));
        max-width: rem(map-get($dropdown, max-width));
        border-radius: rem(4px);

        &--right {
            left: inherit;
            right: 0;
        }

        .btn-dropdown--open & {
            visibility: visible;
            opacity: 1;
            transition: all map-get($dropdown, transition-duration);
            transform: map-get($dropdown, transform-hover);
        }
    }

    &__list {
        @extend .clearfix;
        @extend .list-unstyled;

        &--border-bottom {
            border-bottom: rem(1px) solid #e0e0e0;
        }

        &--padding {
            padding: rem(14px) rem(16px);
        }
    }

    &__item {
        font-size: rem(14px);

        .btn--small & {
            font-size: rem(map-get($btn, font-size-small));
        }

        .btn--medium & {
            font-size: rem(map-get($btn, font-size-medium));
        }

        .btn--large & {
            font-size: rem(map-get($btn, font-size-large));
        }

        + .btn-dropdown__item {
            margin-top: rem(10px);
        }
    }

    &__link {
        background-color: map-get($dropdown, link-bg-color);
        display: block;
        color: map-get($color, text);
        font-size: rem(14px);
        padding: rem(map-get($dropdown, link-padding-vertical)) rem(map-get($dropdown, link-padding-horizontal));

        &:hover {
            background-color: map-get($dropdown, link-bg-color-hover);
        }
    }
}