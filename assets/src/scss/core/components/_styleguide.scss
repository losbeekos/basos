/* Styleguide
==========
*/

.styleguide-container {
	padding-top: rem(20px);
	margin-left: initial;
	margin-right: initial;
}

h1.styleguide,
h2.styleguide,
h3.styleguide,
h4.styleguide,
h5.styleguide,
h6.styleguide {
	position: relative;
	margin-top: 1em;
	margin-bottom: 16px;
}

a.styleguide {
	text-decoration: underline;
}

.styleguide-nav {
	&__sub {
		background: tint(map-get($color, epsilon), 5%);
		padding-top: rem(10px);
		padding-bottom: rem(10px);
	}

	&__category {
		display: block;
	}

	&__link {
		display: block;
		font-size: rem(14px);
		padding: rem(5px) rem(20px);
		transition-delay: 0.05s;

		&.scrollspy-nav--active,
		&.scrollspy-nav--active:hover {
			background: tint(map-get($off-canvas, bg-color), 10%);
		}
	}
}

.styleguide-search-box {
	background: map-get($off-canvas, bg-color);
	position: fixed;
	top: 0;
	left: rem(map-get($off-canvas, toggle-width));
	width: calc(100% - #{rem(map-get($off-canvas, toggle-width))});
	padding: rem(10px);
	z-index: 999;

	@include mq(epsilon-and-up) {
		padding: rem(20px);
		left: rem(map-get($off-canvas, width));
		width: calc(100% - #{rem(map-get($off-canvas, width))});
	}
}

.styleguide-search-box__input[type=text] {
	border-radius: rem(22px);
	padding-left: rem(20px);
	padding-right: rem(20px);
	background: lighten(map-get($off-canvas, bg-color), 10%);
	border-color: lighten(map-get($off-canvas, bg-color), 20%);
	color: white;

	&:focus {
		border-color: lighten(map-get($off-canvas, bg-color), 25%);
	}
}

.exampleOutput {
	position: relative;
	padding: rem(54px) rem(20px) rem(20px) rem(20px);
	border-bottom: 1px solid shade(map-get($color, alpha), 5%);

	&::after {
		content: 'Example';
		background: map-get($color, alpha);
		border: 1px solid shade(map-get($color, alpha), 5%);
		border-left: 0;
		border-top: 0;
		padding: rem(5px) rem(10px);
		position: absolute;
		top: 0;
		left: 0;
		font-size: rem(14px);
		color: shade(map-get($color, alpha), 45%);
	}

	.card {
		max-width: rem(400px);
	}
}

.codeExample {
	border: 1px solid shade(map-get($color, alpha), 5%);
	margin-bottom: rem(60px);
}

.codeBlock {
	overflow-y: auto;
	max-height: rem(400px);
}

.codeBlock pre {
	margin-top: 0;
	margin-bottom: 0;
	font-size: 16px;
}

.codeBlock .highlight pre,
.codeBlock pre {
	padding: 16px;
	overflow: auto;
	font-size: 14px;
	line-height: 1.45;
	background-color: map-get($color, alpha);
	border-radius: 3px;
	color: map-get($color, text);
}

.codeBlock  pre {
	word-wrap: normal;
}

.twitter-typeahead {
	display: block !important;
}

.tt-query {
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
     -moz-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
}

.tt-hint {
  color: #999
}

.tt-menu {
  width: rem(500px);
  margin-top: rem(10px);
  background-color: #fff;
  border-radius: rem(22px);
  overflow: hidden;
  box-shadow: 0 rem(5px) rem(30px) rgba(0,0,0,.2);
}

.tt-suggestion {
  padding: rem(10px) rem(20px);
}

.tt-suggestion.tt-cursor,.tt-suggestion:hover {
  background-color: shade(white, 5%);

}

.tt-suggestion {
  margin: 0;
  display: block;
}


/**
 * Copyright (c) 2013 Trulia, Inc.
 *
 * MIT License
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

hll { background-color: #ffffcc }
.c { color: #999988; font-style: italic } /* Comment */
.err { color: #a61717; background-color: #e3d2d2 } /* Error */
.k { color: #000000; font-weight: bold } /* Keyword */
.o { color: #000000; font-weight: bold } /* Operator */
.cm { color: #999988; font-style: italic } /* Comment.Multiline */
.cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */
.c1 { color: #999988; font-style: italic } /* Comment.Single */
.cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */
.gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */
.ge { color: #000000; font-style: italic } /* Generic.Emph */
.gr { color: #aa0000 } /* Generic.Error */
.gh { color: #999999 } /* Generic.Heading */
.gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */
.go { color: #888888 } /* Generic.Output */
.gp { color: #555555 } /* Generic.Prompt */
.gs { font-weight: bold } /* Generic.Strong */
.gu { color: #aaaaaa } /* Generic.Subheading */
.gt { color: #aa0000 } /* Generic.Traceback */
.kc { color: #000000; font-weight: bold } /* Keyword.Constant */
.kd { color: #000000; font-weight: bold } /* Keyword.Declaration */
.kn { color: #000000; font-weight: bold } /* Keyword.Namespace */
.kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */
.kr { color: #000000; font-weight: bold } /* Keyword.Reserved */
.kt { color: #445588; font-weight: bold } /* Keyword.Type */
.m { color: #009999 } /* Literal.Number */
.s { color: #d01040 } /* Literal.String */
.na { color: #008080 } /* Name.Attribute */
.nb { color: #0086B3 } /* Name.Builtin */
.nc { color: #445588; font-weight: bold } /* Name.Class */
.no { color: #008080 } /* Name.Constant */
.nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */
.ni { color: #800080 } /* Name.Entity */
.ne { color: #990000; font-weight: bold } /* Name.Exception */
.nf { color: #990000; font-weight: bold } /* Name.Function */
.nl { color: #990000; font-weight: bold } /* Name.Label */
.nn { color: #555555 } /* Name.Namespace */
.nt { color: #000080 } /* Name.Tag */
.nv { color: #008080 } /* Name.Variable */
.ow { color: #000000; font-weight: bold } /* Operator.Word */
.w { color: #bbbbbb } /* Text.Whitespace */
.mf { color: #009999 } /* Literal.Number.Float */
.mh { color: #009999 } /* Literal.Number.Hex */
.mi { color: #009999 } /* Literal.Number.Integer */
.mo { color: #009999 } /* Literal.Number.Oct */
.sb { color: #d01040 } /* Literal.String.Backtick */
.sc { color: #d01040 } /* Literal.String.Char */
.sd { color: #d01040 } /* Literal.String.Doc */
.s2 { color: #d01040 } /* Literal.String.Double */
.se { color: #d01040 } /* Literal.String.Escape */
.sh { color: #d01040 } /* Literal.String.Heredoc */
.si { color: #d01040 } /* Literal.String.Interpol */
.sx { color: #d01040 } /* Literal.String.Other */
.sr { color: #009926 } /* Literal.String.Regex */
.s1 { color: #d01040 } /* Literal.String.Single */
.ss { color: #990073 } /* Literal.String.Symbol */
.bp { color: #999999 } /* Name.Builtin.Pseudo */
.vc { color: #008080 } /* Name.Variable.Class */
.vg { color: #008080 } /* Name.Variable.Global */
.vi { color: #008080 } /* Name.Variable.Instance */
.il { color: #009999 } /* Literal.Number.Integer.Long */