/*=============================
=            off-canvas            =
=============================*/

.off-canvas-toggle-left,
.off-canvas-toggle-right {
    @extend %font-icons;

    background: map-get($off-canvas, toggle-bg-color);
    position: absolute;
    top: 0;
    z-index: 10000;
    color: map-get($color, white);
    text-align: center;
    border: none;

    @include rem(font-size, 30px);
    @include rem(width, 50px);
    @include rem(height, 50px);

    &:hover {
        background: lighten(map-get($off-canvas, toggle-bg-color), 5%);
        color: map-get($color, white);
        text-decoration: none;
    }

    &:active,
    &:focus {
        outline: none;
    }
}

.off-canvas-toggle-left {
    @include rem(right, -50px);

    &:before {
        content: map-get($icon, off-canvas-toggle-left);

        .off-canvas-show-left & {
            content: map-get($icon, off-canvas-toggle-close);
        }
    }
}

.off-canvas-toggle-right {
    @include rem(left, -50px);

    &:before {
        content: map-get($icon, off-canvas-toggle-right);

        .off-canvas-show-right & {
            content: map-get($icon, off-canvas-toggle-close);
        }
    }
}

.off-canvas {
    background: map-get($off-canvas, bg-color);
    position: fixed;
    z-index: 9999;
    top: 0;
    height: 100%;

    @include rem(width, map-get($off-canvas, width));
}

.off-canvas--left {
    left: 0;
    transform: translate3d(-#{map-get($off-canvas, width)}, 0, 0);
    transition: transform map-get($base, transition-speed);

    .off-canvas-show-left & {
        transform: translate3d(0, 0, 0);
    }

    .no-csstransforms3d & {
        left: -#{map-get($off-canvas, width)};
    }

    .no-csstransforms3d.off-canvas-show-left & {
        left: 0;
    }
}

.off-canvas--right {
    right: 0;
    transform: translate3d(map-get($off-canvas, width), 0, 0);
    transition: transform map-get($base, transition-speed);

    .off-canvas-show-right & {
        transform: translate3d(0, 0, 0);
    }

    .no-csstransforms3d & {
        right: -#{map-get($off-canvas, width)};
    }

    .no-csstransforms3d.off-canvas-show-left & {
        right: 0;
    }
}

.off-canvas-push {
    &:after {
        content: '';
        background: map-get($color, black);
        width: 100%;
        height: 100%;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 999;
        visibility: hidden;
        opacity: 0;
        transition: all map-get($base, transition-speed);

        .off-canvas-show-left &,
        .off-canvas-show-right & {
            visibility: visible;
            opacity: 0.3;
        }

        .lt-ie10 & {
            display: none;
        }
    }
}

.off-canvas-nav__item {
    border-top: 1px solid map-get($color, white);
    border-bottom: 1px solid darken(map-get($off-canvas, bg-color), 5%);

    &:first-child {
        border-top: 0;
    }

    &:last-child {
        border-bottom: 0;
    }
}

.off-canvas-nav__link {
    display: block;
    color: map-get($color, black);

    @include rem(padding, 20px);

    &.active {
        background: lighten(map-get($off-canvas, bg-color), 3%);
    }
}
